buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.0'
    }
}

apply plugin: 'com.android.application'

repositories {
    maven { url "http://repo.commonsware.com.s3.amazonaws.com" }
    maven { url "https://repository-achartengine.forge.cloudbees.com/snapshot/" }
    jcenter()
}

//noinspection GroovyAssignabilityCheck
sourceSets {
    testLocal {
        java.srcDir file('src/androidTest/java')
        resources.srcDir file('src/androidTest/res')
    }
}


android {

    defaultConfig {
        generatedDensities = []
    }
    
    testOptions {
        unitTests.returnDefaultValues = true
    }

    sourceSets {
        instrumentTest.setRoot('src/androidTest/')
        testLocal {
            java.srcDir file('src/androidTest/java')
            resources.srcDir file('src/androidTest/res')
        }
    }

    lintOptions {
        // set to true to turn off analysis progress reporting by lint
        quiet true
        // if true, stop the gradle build if errors are found
        abortOnError false
        // if true, only report errors
        ignoreWarnings true
    }


    signingConfigs {
        release {
            readKeystoreProperties()
        }
    }


    compileSdkVersion 'Google Inc.:Google APIs:23'
    buildToolsVersion '23.0.2'
    useLibrary 'org.apache.http.legacy'

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 22
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {

        debug {
            minifyEnabled false
            shrinkResources false
            debuggable true
            signingConfig signingConfigs.release
        }

        debugv9 {
            debuggable true
            multiDexEnabled true
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFile 'proguard-google-api-client.txt'
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard-rules.txt'

        }

        release {
            multiDexEnabled true
            shrinkResources true
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            renderscriptDebuggable false
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            proguardFile 'proguard-google-api-client.txt'
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard-rules.txt'
        }
    }
    dexOptions {
        incremental true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

task localTest(type: Test, dependsOn: assemble) {
    testClassesDir = sourceSets.testLocal.output.classesDir

    android.sourceSets.main.java.srcDirs.each { dir ->
        def buildDir = dir.getAbsolutePath().split('/')
        //noinspection GroovyAssignabilityCheck
        buildDir = (buildDir[0..(buildDir.length - 4)] + ['build', 'classes', 'debug']).join('/')

        //noinspection GroovyAssignabilityCheck
        sourceSets.testLocal.compileClasspath += files(buildDir)
        sourceSets.testLocal.runtimeClasspath += files(buildDir)
    }

    classpath = sourceSets.testLocal.runtimeClasspath
}

//noinspection GroovyAssignabilityCheck
check.dependsOn localTest

configurations.all {
    resolutionStrategy.force 'com.google.code.findbugs:jsr305:2.0.1'
}

dependencies {

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.9.5'
    androidTestCompile 'com.android.support.test:runner:0.4.1'
    androidTestCompile 'com.android.support.test:rules:0.4.1'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.1'
    androidTestCompile ('com.android.support.test.espresso:espresso-contrib:2.2.1') {
        exclude group: 'com.android.support'
    }
    androidTestCompile 'com.android.support:support-annotations:23.2.1'

    compile "com.android.support:support-v4:23.2.1"
    compile 'com.android.support:appcompat-v7:23.2.1'
    compile 'com.android.support:design:23.2.1'
    compile 'com.commonsware.cwac:wakeful:1.0.1'
    compile 'org.achartengine:achartengine:1.2.0'
    compile 'net.sf.trove4j:trove4j:3.0.3'
    compile 'com.google.android.gms:play-services-base:8.4.0'
    compile 'com.google.android.gms:play-services-drive:8.4.0'


    //compile 'com.google.api-client:google-api-client:1.20.0'
    //compile 'com.google.oauth-client:google-oauth-client-jetty:1.20.0'
    //compile 'com.google.apis:google-api-services-drive:v3-rev6-1.20.0'

    //compile ('com.google.api-client:google-api-client-android:1.20.0')
    //compile ('com.google.http-client:google-http-client-gson:1.20.0')

    compile 'com.google.android.gms:play-services-location:8.4.0'
    compile 'com.google.android.gms:play-services-auth:8.4.0'
    compile 'com.google.android.gms:play-services-plus:8.4.0'
    compile 'com.google.android.gms:play-services-gcm:8.4.0'
    compile 'com.github.ganfra:material-spinner:1.1.1'
    compile fileTree(dir: 'libs', include: ['**/*.jar'])
    // =============================================================
    //  Find in ./lib/* have to  be downloaded info on lib/Readme //
    // =============================================================
    //
    //compile files('libs/dropbox-android-sdk-1.6.3.jar')
    //compile files('libs/gson-2.6.1.jar')
    //compile files('libs/google-rfc2445-20110304.jar')
    //compile files('libs/json_simple-1.1.jar')
    //compile files('libs/google-api-client-android-1.20.0.jar')
    //compile files('libs/google-http-client-1.20.0.jar')

}



def readKeystoreProperties() {
    def propsFile = rootProject.file('keystore.properties')
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        android.signingConfigs["release"].storeFile = file(props['storeFile'])
        android.signingConfigs["release"].storePassword = props['storePassword']
        android.signingConfigs["release"].keyAlias = props['keyAlias']
        android.signingConfigs["release"].keyPassword = props['keyPassword']
        println "===== read keystore properties success ====="
    }
}
