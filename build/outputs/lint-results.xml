<?xml version="1.0" encoding="UTF-8"?>
<issues format="4" by="lint 24.4.1">

    <issue
        id="DuplicateIds"
        severity="Fatal"
        message="Duplicate id `@+id/TextView01`, already defined earlier in this layout"
        category="Correctness"
        priority="7"
        summary="Duplicate ids within a single layout"
        explanation="Within a layout, id&apos;s should be unique since otherwise `findViewById()` can return an unexpected view."
        errorLine1="  &lt;/TableLayout>&lt;TextView android:id=&quot;@+id/TextView01&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; android:layout_weight=&quot;1&quot;>&lt;/TextView>"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/layout-land/lock.xml"
            line="63"
            column="27"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/layout-land/lock.xml"
            line="21"
            column="27"/>
    </issue>

    <issue
        id="MissingPrefix"
        severity="Error"
        message="Unexpected namespace prefix &quot;xmlns&quot; found for tag `LinearLayout`"
        category="Correctness"
        priority="6"
        summary="Missing Android XML namespace"
        explanation="Most Android views have attributes in the Android namespace. When referencing these attributes you *must* include the namespace prefix, or your attribute will be interpreted by `aapt` as just a custom attribute.

Similarly, in manifest files, nearly all attributes should be in the `android:` namespace."
        errorLine1=" &lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/layout/account.xml"
            line="47"
            column="16"/>
    </issue>

    <issue
        id="MissingPrefix"
        severity="Error"
        message="Unexpected namespace prefix &quot;xmlns&quot; found for tag `LinearLayout`"
        category="Correctness"
        priority="6"
        summary="Missing Android XML namespace"
        explanation="Most Android views have attributes in the Android namespace. When referencing these attributes you *must* include the namespace prefix, or your attribute will be interpreted by `aapt` as just a custom attribute.

Similarly, in manifest files, nearly all attributes should be in the `android:` namespace."
        errorLine1="&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/layout-land/account_list.xml"
            line="22"
            column="15"/>
    </issue>

    <issue
        id="MissingPrefix"
        severity="Error"
        message="Unexpected namespace prefix &quot;xmlns&quot; found for tag `LinearLayout`"
        category="Correctness"
        priority="6"
        summary="Missing Android XML namespace"
        explanation="Most Android views have attributes in the Android namespace. When referencing these attributes you *must* include the namespace prefix, or your attribute will be interpreted by `aapt` as just a custom attribute.

Similarly, in manifest files, nearly all attributes should be in the `android:` namespace."
        errorLine1="&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/layout/account_list.xml"
            line="32"
            column="15"/>
    </issue>

    <issue
        id="MissingPrefix"
        severity="Error"
        message="Unexpected namespace prefix &quot;xmlns&quot; found for tag `LinearLayout`"
        category="Correctness"
        priority="6"
        summary="Missing Android XML namespace"
        explanation="Most Android views have attributes in the Android namespace. When referencing these attributes you *must* include the namespace prefix, or your attribute will be interpreted by `aapt` as just a custom attribute.

Similarly, in manifest files, nearly all attributes should be in the `android:` namespace."
        errorLine1=" &lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/layout-land/account_list.xml"
            line="39"
            column="16"/>
    </issue>

    <issue
        id="MissingPrefix"
        severity="Error"
        message="Unexpected namespace prefix &quot;xmlns&quot; found for tag `LinearLayout`"
        category="Correctness"
        priority="6"
        summary="Missing Android XML namespace"
        explanation="Most Android views have attributes in the Android namespace. When referencing these attributes you *must* include the namespace prefix, or your attribute will be interpreted by `aapt` as just a custom attribute.

Similarly, in manifest files, nearly all attributes should be in the `android:` namespace."
        errorLine1=" &lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/layout/attributes_list.xml"
            line="18"
            column="16"/>
    </issue>

    <issue
        id="MissingPrefix"
        severity="Error"
        message="Unexpected namespace prefix &quot;xmlns&quot; found for tag `LinearLayout`"
        category="Correctness"
        priority="6"
        summary="Missing Android XML namespace"
        explanation="Most Android views have attributes in the Android namespace. When referencing these attributes you *must* include the namespace prefix, or your attribute will be interpreted by `aapt` as just a custom attribute.

Similarly, in manifest files, nearly all attributes should be in the `android:` namespace."
        errorLine1="&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/layout-land/blotter.xml"
            line="25"
            column="15"/>
    </issue>

    <issue
        id="MissingPrefix"
        severity="Error"
        message="Unexpected namespace prefix &quot;xmlns&quot; found for tag `LinearLayout`"
        category="Correctness"
        priority="6"
        summary="Missing Android XML namespace"
        explanation="Most Android views have attributes in the Android namespace. When referencing these attributes you *must* include the namespace prefix, or your attribute will be interpreted by `aapt` as just a custom attribute.

Similarly, in manifest files, nearly all attributes should be in the `android:` namespace."
        errorLine1="    &lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/layout/blotter_mass_op_list_item.xml"
            line="20"
            column="19"/>
    </issue>

    <issue
        id="MissingPrefix"
        severity="Error"
        message="Unexpected namespace prefix &quot;xmlns&quot; found for tag `LinearLayout`"
        category="Correctness"
        priority="6"
        summary="Missing Android XML namespace"
        explanation="Most Android views have attributes in the Android namespace. When referencing these attributes you *must* include the namespace prefix, or your attribute will be interpreted by `aapt` as just a custom attribute.

Similarly, in manifest files, nearly all attributes should be in the `android:` namespace."
        errorLine1="  &lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/layout/budget.xml"
            line="49"
            column="17"/>
    </issue>

    <issue
        id="MissingPrefix"
        severity="Error"
        message="Unexpected namespace prefix &quot;xmlns&quot; found for tag `LinearLayout`"
        category="Correctness"
        priority="6"
        summary="Missing Android XML namespace"
        explanation="Most Android views have attributes in the Android namespace. When referencing these attributes you *must* include the namespace prefix, or your attribute will be interpreted by `aapt` as just a custom attribute.

Similarly, in manifest files, nearly all attributes should be in the `android:` namespace."
        errorLine1="&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/layout-land/budget_list.xml"
            line="17"
            column="15"/>
    </issue>

    <issue
        id="MissingPrefix"
        severity="Error"
        message="Unexpected namespace prefix &quot;xmlns&quot; found for tag `LinearLayout`"
        category="Correctness"
        priority="6"
        summary="Missing Android XML namespace"
        explanation="Most Android views have attributes in the Android namespace. When referencing these attributes you *must* include the namespace prefix, or your attribute will be interpreted by `aapt` as just a custom attribute.

Similarly, in manifest files, nearly all attributes should be in the `android:` namespace."
        errorLine1="&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/layout/budget_list.xml"
            line="29"
            column="15"/>
    </issue>

    <issue
        id="MissingPrefix"
        severity="Error"
        message="Unexpected namespace prefix &quot;xmlns&quot; found for tag `LinearLayout`"
        category="Correctness"
        priority="6"
        summary="Missing Android XML namespace"
        explanation="Most Android views have attributes in the Android namespace. When referencing these attributes you *must* include the namespace prefix, or your attribute will be interpreted by `aapt` as just a custom attribute.

Similarly, in manifest files, nearly all attributes should be in the `android:` namespace."
        errorLine1="&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/layout-land/budget_list.xml"
            line="33"
            column="15"/>
    </issue>

    <issue
        id="MissingPrefix"
        severity="Error"
        message="Unexpected namespace prefix &quot;xmlns&quot; found for tag `LinearLayout`"
        category="Correctness"
        priority="6"
        summary="Missing Android XML namespace"
        explanation="Most Android views have attributes in the Android namespace. When referencing these attributes you *must* include the namespace prefix, or your attribute will be interpreted by `aapt` as just a custom attribute.

Similarly, in manifest files, nearly all attributes should be in the `android:` namespace."
        errorLine1=" &lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/layout/category_list.xml"
            line="19"
            column="16"/>
    </issue>

    <issue
        id="MissingPrefix"
        severity="Error"
        message="Unexpected namespace prefix &quot;xmlns&quot; found for tag `LinearLayout`"
        category="Correctness"
        priority="6"
        summary="Missing Android XML namespace"
        explanation="Most Android views have attributes in the Android namespace. When referencing these attributes you *must* include the namespace prefix, or your attribute will be interpreted by `aapt` as just a custom attribute.

Similarly, in manifest files, nearly all attributes should be in the `android:` namespace."
        errorLine1=" &lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/layout/ccard_statement_closing_day.xml"
            line="53"
            column="16"/>
    </issue>

    <issue
        id="MissingPrefix"
        severity="Error"
        message="Unexpected namespace prefix &quot;xmlns&quot; found for tag `LinearLayout`"
        category="Correctness"
        priority="6"
        summary="Missing Android XML namespace"
        explanation="Most Android views have attributes in the Android namespace. When referencing these attributes you *must* include the namespace prefix, or your attribute will be interpreted by `aapt` as just a custom attribute.

Similarly, in manifest files, nearly all attributes should be in the `android:` namespace."
        errorLine1=" &lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/layout/currency_list.xml"
            line="18"
            column="16"/>
    </issue>

    <issue
        id="MissingPrefix"
        severity="Error"
        message="Unexpected namespace prefix &quot;xmlns&quot; found for tag `LinearLayout`"
        category="Correctness"
        priority="6"
        summary="Missing Android XML namespace"
        explanation="Most Android views have attributes in the Android namespace. When referencing these attributes you *must* include the namespace prefix, or your attribute will be interpreted by `aapt` as just a custom attribute.

Similarly, in manifest files, nearly all attributes should be in the `android:` namespace."
        errorLine1=" &lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/layout/entity_list_item.xml"
            line="17"
            column="16"/>
    </issue>

    <issue
        id="MissingPrefix"
        severity="Error"
        message="Unexpected namespace prefix &quot;xmlns&quot; found for tag `LinearLayout`"
        category="Correctness"
        priority="6"
        summary="Missing Android XML namespace"
        explanation="Most Android views have attributes in the Android namespace. When referencing these attributes you *must* include the namespace prefix, or your attribute will be interpreted by `aapt` as just a custom attribute.

Similarly, in manifest files, nearly all attributes should be in the `android:` namespace."
        errorLine1="&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/layout/exchange_rate_list.xml"
            line="16"
            column="15"/>
    </issue>

    <issue
        id="MissingPrefix"
        severity="Error"
        message="Unexpected namespace prefix &quot;xmlns&quot; found for tag `fragment`"
        category="Correctness"
        priority="6"
        summary="Missing Android XML namespace"
        explanation="Most Android views have attributes in the Android namespace. When referencing these attributes you *must* include the namespace prefix, or your attribute will be interpreted by `aapt` as just a custom attribute.

Similarly, in manifest files, nearly all attributes should be in the `android:` namespace."
        errorLine1="      xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/layout/location.xml"
            line="18"
            column="7"/>
    </issue>

    <issue
        id="MissingPrefix"
        severity="Error"
        message="Unexpected namespace prefix &quot;xmlns&quot; found for tag `LinearLayout`"
        category="Correctness"
        priority="6"
        summary="Missing Android XML namespace"
        explanation="Most Android views have attributes in the Android namespace. When referencing these attributes you *must* include the namespace prefix, or your attribute will be interpreted by `aapt` as just a custom attribute.

Similarly, in manifest files, nearly all attributes should be in the `android:` namespace."
        errorLine1=" &lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/layout/location_list.xml"
            line="19"
            column="16"/>
    </issue>

    <issue
        id="MissingPrefix"
        severity="Error"
        message="Unexpected namespace prefix &quot;xmlns&quot; found for tag `LinearLayout`"
        category="Correctness"
        priority="6"
        summary="Missing Android XML namespace"
        explanation="Most Android views have attributes in the Android namespace. When referencing these attributes you *must* include the namespace prefix, or your attribute will be interpreted by `aapt` as just a custom attribute.

Similarly, in manifest files, nearly all attributes should be in the `android:` namespace."
        errorLine1="&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/layout-land/planner.xml"
            line="14"
            column="15"/>
    </issue>

    <issue
        id="MissingPrefix"
        severity="Error"
        message="Unexpected namespace prefix &quot;xmlns&quot; found for tag `LinearLayout`"
        category="Correctness"
        priority="6"
        summary="Missing Android XML namespace"
        explanation="Most Android views have attributes in the Android namespace. When referencing these attributes you *must* include the namespace prefix, or your attribute will be interpreted by `aapt` as just a custom attribute.

Similarly, in manifest files, nearly all attributes should be in the `android:` namespace."
        errorLine1=" &lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/layout/project_list.xml"
            line="20"
            column="16"/>
    </issue>

    <issue
        id="MissingPrefix"
        severity="Error"
        message="Unexpected namespace prefix &quot;xmlns&quot; found for tag `LinearLayout`"
        category="Correctness"
        priority="6"
        summary="Missing Android XML namespace"
        explanation="Most Android views have attributes in the Android namespace. When referencing these attributes you *must* include the namespace prefix, or your attribute will be interpreted by `aapt` as just a custom attribute.

Similarly, in manifest files, nearly all attributes should be in the `android:` namespace."
        errorLine1="  &lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/layout/purge_account.xml"
            line="13"
            column="17"/>
    </issue>

    <issue
        id="MissingPrefix"
        severity="Error"
        message="Unexpected namespace prefix &quot;xmlns&quot; found for tag `LinearLayout`"
        category="Correctness"
        priority="6"
        summary="Missing Android XML namespace"
        explanation="Most Android views have attributes in the Android namespace. When referencing these attributes you *must* include the namespace prefix, or your attribute will be interpreted by `aapt` as just a custom attribute.

Similarly, in manifest files, nearly all attributes should be in the `android:` namespace."
        errorLine1="  &lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/layout/recurrence.xml"
            line="16"
            column="17"/>
    </issue>

    <issue
        id="MissingPrefix"
        severity="Error"
        message="Unexpected namespace prefix &quot;xmlns&quot; found for tag `LinearLayout`"
        category="Correctness"
        priority="6"
        summary="Missing Android XML namespace"
        explanation="Most Android views have attributes in the Android namespace. When referencing these attributes you *must* include the namespace prefix, or your attribute will be interpreted by `aapt` as just a custom attribute.

Similarly, in manifest files, nearly all attributes should be in the `android:` namespace."
        errorLine1="     xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/layout/report_2d.xml"
            line="13"
            column="6"/>
    </issue>

    <issue
        id="MissingPrefix"
        severity="Error"
        message="Unexpected namespace prefix &quot;xmlns&quot; found for tag `LinearLayout`"
        category="Correctness"
        priority="6"
        summary="Missing Android XML namespace"
        explanation="Most Android views have attributes in the Android namespace. When referencing these attributes you *must* include the namespace prefix, or your attribute will be interpreted by `aapt` as just a custom attribute.

Similarly, in manifest files, nearly all attributes should be in the `android:` namespace."
        errorLine1="     xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;    "
        errorLine2="     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/layout/report_2d.xml"
            line="18"
            column="6"/>
    </issue>

    <issue
        id="MissingPrefix"
        severity="Error"
        message="Unexpected namespace prefix &quot;xmlns&quot; found for tag `LinearLayout`"
        category="Correctness"
        priority="6"
        summary="Missing Android XML namespace"
        explanation="Most Android views have attributes in the Android namespace. When referencing these attributes you *must* include the namespace prefix, or your attribute will be interpreted by `aapt` as just a custom attribute.

Similarly, in manifest files, nearly all attributes should be in the `android:` namespace."
        errorLine1=" &lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/layout/report_list_item.xml"
            line="15"
            column="16"/>
    </issue>

    <issue
        id="MissingPrefix"
        severity="Error"
        message="Unexpected namespace prefix &quot;xmlns&quot; found for tag `LinearLayout`"
        category="Correctness"
        priority="6"
        summary="Missing Android XML namespace"
        explanation="Most Android views have attributes in the Android namespace. When referencing these attributes you *must* include the namespace prefix, or your attribute will be interpreted by `aapt` as just a custom attribute.

Similarly, in manifest files, nearly all attributes should be in the `android:` namespace."
        errorLine1="  &lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/layout/transaction_free.xml"
            line="58"
            column="17"/>
    </issue>

    <issue
        id="MissingPrefix"
        severity="Error"
        message="Unexpected namespace prefix &quot;xmlns&quot; found for tag `LinearLayout`"
        category="Correctness"
        priority="6"
        summary="Missing Android XML namespace"
        explanation="Most Android views have attributes in the Android namespace. When referencing these attributes you *must* include the namespace prefix, or your attribute will be interpreted by `aapt` as just a custom attribute.

Similarly, in manifest files, nearly all attributes should be in the `android:` namespace."
        errorLine1="  &lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/layout/transfer_fixed.xml"
            line="16"
            column="17"/>
    </issue>

    <issue
        id="MissingPrefix"
        severity="Error"
        message="Unexpected namespace prefix &quot;xmlns&quot; found for tag `LinearLayout`"
        category="Correctness"
        priority="6"
        summary="Missing Android XML namespace"
        explanation="Most Android views have attributes in the Android namespace. When referencing these attributes you *must* include the namespace prefix, or your attribute will be interpreted by `aapt` as just a custom attribute.

Similarly, in manifest files, nearly all attributes should be in the `android:` namespace."
        errorLine1="            &lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/layout/transfer_free.xml"
            line="57"
            column="27"/>
    </issue>

    <issue
        id="MissingPrefix"
        severity="Error"
        message="Unexpected namespace prefix &quot;xmlns&quot; found for tag `RelativeLayout`"
        category="Correctness"
        priority="6"
        summary="Missing Android XML namespace"
        explanation="Most Android views have attributes in the Android namespace. When referencing these attributes you *must* include the namespace prefix, or your attribute will be interpreted by `aapt` as just a custom attribute.

Similarly, in manifest files, nearly all attributes should be in the `android:` namespace."
        errorLine1="    &lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/layout/widget_3x1_no_data.xml"
            line="13"
            column="21"/>
    </issue>

    <issue
        id="MissingPrefix"
        severity="Error"
        message="Unexpected namespace prefix &quot;xmlns&quot; found for tag `RelativeLayout`"
        category="Correctness"
        priority="6"
        summary="Missing Android XML namespace"
        explanation="Most Android views have attributes in the Android namespace. When referencing these attributes you *must* include the namespace prefix, or your attribute will be interpreted by `aapt` as just a custom attribute.

Similarly, in manifest files, nearly all attributes should be in the `android:` namespace."
        errorLine1="    &lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/layout/widget_4x1_no_data.xml"
            line="13"
            column="21"/>
    </issue>

    <issue
        id="Orientation"
        severity="Error"
        message="No orientation specified, and the default is horizontal. This is a common source of bugs when children are added dynamically."
        category="Correctness"
        priority="2"
        summary="Missing explicit orientation"
        explanation="The default orientation of a LinearLayout is horizontal. It&apos;s pretty easy to believe that the layout is vertical, add multiple children to it, and wonder why only the first child is visible (when the subsequent children are off screen to the right). This lint rule helps pinpoint this issue by warning whenever a LinearLayout is used with an implicit orientation and multiple children.

It also checks for empty LinearLayouts without an `orientation` attribute that also defines an `id` attribute. This catches the scenarios where children will be added to the `LinearLayout` dynamically. "
        errorLine1="   &lt;LinearLayout android:layout_height=&quot;wrap_content&quot;"
        errorLine2="   ^"
        quickfix="studio">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/layout/recur.xml"
            line="36"
            column="4"/>
    </issue>

    <issue
        id="Orientation"
        severity="Error"
        message="No orientation specified, and the default is horizontal. This is a common source of bugs when children are added dynamically."
        category="Correctness"
        priority="2"
        summary="Missing explicit orientation"
        explanation="The default orientation of a LinearLayout is horizontal. It&apos;s pretty easy to believe that the layout is vertical, add multiple children to it, and wonder why only the first child is visible (when the subsequent children are off screen to the right). This lint rule helps pinpoint this issue by warning whenever a LinearLayout is used with an implicit orientation and multiple children.

It also checks for empty LinearLayouts without an `orientation` attribute that also defines an `id` attribute. This catches the scenarios where children will be added to the `LinearLayout` dynamically. "
        errorLine1="   &lt;LinearLayout android:layout_height=&quot;wrap_content&quot;"
        errorLine2="   ^"
        quickfix="studio">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/layout/recur.xml"
            line="42"
            column="4"/>
    </issue>

    <issue
        id="Orientation"
        severity="Error"
        message="No orientation specified, and the default is horizontal. This is a common source of bugs when children are added dynamically."
        category="Correctness"
        priority="2"
        summary="Missing explicit orientation"
        explanation="The default orientation of a LinearLayout is horizontal. It&apos;s pretty easy to believe that the layout is vertical, add multiple children to it, and wonder why only the first child is visible (when the subsequent children are off screen to the right). This lint rule helps pinpoint this issue by warning whenever a LinearLayout is used with an implicit orientation and multiple children.

It also checks for empty LinearLayouts without an `orientation` attribute that also defines an `id` attribute. This catches the scenarios where children will be added to the `LinearLayout` dynamically. "
        errorLine1=" &lt;LinearLayout "
        errorLine2=" ^"
        quickfix="studio">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/layout-sw600dp-land/report.xml"
            line="34"
            column="2"/>
    </issue>

    <issue
        id="Orientation"
        severity="Error"
        message="No orientation specified, and the default is horizontal. This is a common source of bugs when children are added dynamically."
        category="Correctness"
        priority="2"
        summary="Missing explicit orientation"
        explanation="The default orientation of a LinearLayout is horizontal. It&apos;s pretty easy to believe that the layout is vertical, add multiple children to it, and wonder why only the first child is visible (when the subsequent children are off screen to the right). This lint rule helps pinpoint this issue by warning whenever a LinearLayout is used with an implicit orientation and multiple children.

It also checks for empty LinearLayouts without an `orientation` attribute that also defines an `id` attribute. This catches the scenarios where children will be added to the `LinearLayout` dynamically. "
        errorLine1="&lt;LinearLayout "
        errorLine2="^"
        quickfix="studio">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/layout/report.xml"
            line="64"
            column="1"/>
    </issue>

    <issue
        id="StringFormatInvalid"
        severity="Error"
        message="Format string &apos;`new_scheduled_transaction_notification`&apos; is not a valid format string so it should not be passed to `String.format`"
        category="Correctness:Messages"
        priority="9"
        summary="Invalid format string"
        explanation="If a string contains a &apos;%&apos; character, then the string may be a formatting string which will be passed to `String.format` from Java code to replace each &apos;%&apos; occurrence with specific values.

This lint warning checks for two related problems:
(1) Formatting strings that are invalid, meaning that `String.format` will throw exceptions at runtime when attempting to use the format string.
(2) Strings containing &apos;%&apos; that are not formatting strings getting passed to a `String.format` call. In this case the &apos;%&apos; will need to be escaped as &apos;%%&apos;.

NOTE: Not all Strings which look like formatting strings are intended for use by `String.format`; for example, they may contain date formats intended for `android.text.format.Time#format()`. Lint cannot always figure out that a String is a date format, so you may get false warnings in those scenarios. See the suppress help topic for information on how to suppress errors in that case."
        errorLine1=" &lt;string name=&quot;new_scheduled_transaction_notification&quot; formatted=&quot;false&quot;>%s has been %s %s&lt;/string>"
        errorLine2=" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="520"
            column="2"/>
    </issue>

    <issue
        id="StringFormatInvalid"
        severity="Error"
        message="Format string &apos;`new_scheduled_transfer_notification_differ_currency`&apos; is not a valid format string so it should not be passed to `String.format`"
        category="Correctness:Messages"
        priority="9"
        summary="Invalid format string"
        explanation="If a string contains a &apos;%&apos; character, then the string may be a formatting string which will be passed to `String.format` from Java code to replace each &apos;%&apos; occurrence with specific values.

This lint warning checks for two related problems:
(1) Formatting strings that are invalid, meaning that `String.format` will throw exceptions at runtime when attempting to use the format string.
(2) Strings containing &apos;%&apos; that are not formatting strings getting passed to a `String.format` call. In this case the &apos;%&apos; will need to be escaped as &apos;%%&apos;.

NOTE: Not all Strings which look like formatting strings are intended for use by `String.format`; for example, they may contain date formats intended for `android.text.format.Time#format()`. Lint cannot always figure out that a String is a date format, so you may get false warnings in those scenarios. See the suppress help topic for information on how to suppress errors in that case."
        errorLine1=" &lt;string name=&quot;new_scheduled_transfer_notification_differ_currency&quot; formatted=&quot;false&quot;>%s(%s) has been transferred from %s to %s&lt;/string>"
        errorLine2=" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="523"
            column="2"/>
    </issue>

    <issue
        id="StringFormatInvalid"
        severity="Error"
        message="Format string &apos;`new_scheduled_transfer_notification_same_currency`&apos; is not a valid format string so it should not be passed to `String.format`"
        category="Correctness:Messages"
        priority="9"
        summary="Invalid format string"
        explanation="If a string contains a &apos;%&apos; character, then the string may be a formatting string which will be passed to `String.format` from Java code to replace each &apos;%&apos; occurrence with specific values.

This lint warning checks for two related problems:
(1) Formatting strings that are invalid, meaning that `String.format` will throw exceptions at runtime when attempting to use the format string.
(2) Strings containing &apos;%&apos; that are not formatting strings getting passed to a `String.format` call. In this case the &apos;%&apos; will need to be escaped as &apos;%%&apos;.

NOTE: Not all Strings which look like formatting strings are intended for use by `String.format`; for example, they may contain date formats intended for `android.text.format.Time#format()`. Lint cannot always figure out that a String is a date format, so you may get false warnings in those scenarios. See the suppress help topic for information on how to suppress errors in that case."
        errorLine1=" &lt;string name=&quot;new_scheduled_transfer_notification_same_currency&quot; formatted=&quot;false&quot;>%s has been transferred from %s to %s&lt;/string>"
        errorLine2=" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="524"
            column="2"/>
    </issue>

    <issue
        id="StringFormatInvalid"
        severity="Error"
        message="Format string &apos;`downloading_rate`&apos; is not a valid format string so it should not be passed to `String.format`"
        category="Correctness:Messages"
        priority="9"
        summary="Invalid format string"
        explanation="If a string contains a &apos;%&apos; character, then the string may be a formatting string which will be passed to `String.format` from Java code to replace each &apos;%&apos; occurrence with specific values.

This lint warning checks for two related problems:
(1) Formatting strings that are invalid, meaning that `String.format` will throw exceptions at runtime when attempting to use the format string.
(2) Strings containing &apos;%&apos; that are not formatting strings getting passed to a `String.format` call. In this case the &apos;%&apos; will need to be escaped as &apos;%%&apos;.

NOTE: Not all Strings which look like formatting strings are intended for use by `String.format`; for example, they may contain date formats intended for `android.text.format.Time#format()`. Lint cannot always figure out that a String is a date format, so you may get false warnings in those scenarios. See the suppress help topic for information on how to suppress errors in that case."
        errorLine1="    &lt;string name=&quot;downloading_rate&quot; formatted=&quot;false&quot;>Downloading %s/%s conversion rate...&lt;/string>"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="663"
            column="5"/>
    </issue>

    <issue
        id="StringFormatInvalid"
        severity="Error"
        message="Format string &apos;`auto_backup_time_summary`&apos; is not a valid format string so it should not be passed to `String.format`"
        category="Correctness:Messages"
        priority="9"
        summary="Invalid format string"
        explanation="If a string contains a &apos;%&apos; character, then the string may be a formatting string which will be passed to `String.format` from Java code to replace each &apos;%&apos; occurrence with specific values.

This lint warning checks for two related problems:
(1) Formatting strings that are invalid, meaning that `String.format` will throw exceptions at runtime when attempting to use the format string.
(2) Strings containing &apos;%&apos; that are not formatting strings getting passed to a `String.format` call. In this case the &apos;%&apos; will need to be escaped as &apos;%%&apos;.

NOTE: Not all Strings which look like formatting strings are intended for use by `String.format`; for example, they may contain date formats intended for `android.text.format.Time#format()`. Lint cannot always figure out that a String is a date format, so you may get false warnings in those scenarios. See the suppress help topic for information on how to suppress errors in that case."
        errorLine1="    &lt;string name=&quot;auto_backup_time_summary&quot; formatted=&quot;false&quot;>Do daily backup at %02d:%02d&lt;/string>"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="744"
            column="5"/>
    </issue>

    <issue
        id="StringFormatInvalid"
        severity="Error"
        message="Format string &apos;`rate_not_available_on_date_error`&apos; is not a valid format string so it should not be passed to `String.format`"
        category="Correctness:Messages"
        priority="9"
        summary="Invalid format string"
        explanation="If a string contains a &apos;%&apos; character, then the string may be a formatting string which will be passed to `String.format` from Java code to replace each &apos;%&apos; occurrence with specific values.

This lint warning checks for two related problems:
(1) Formatting strings that are invalid, meaning that `String.format` will throw exceptions at runtime when attempting to use the format string.
(2) Strings containing &apos;%&apos; that are not formatting strings getting passed to a `String.format` call. In this case the &apos;%&apos; will need to be escaped as &apos;%%&apos;.

NOTE: Not all Strings which look like formatting strings are intended for use by `String.format`; for example, they may contain date formats intended for `android.text.format.Time#format()`. Lint cannot always figure out that a String is a date format, so you may get false warnings in those scenarios. See the suppress help topic for information on how to suppress errors in that case."
        errorLine1="    &lt;string name=&quot;rate_not_available_on_date_error&quot; formatted=&quot;false&quot;>No exchange rate specified on %s to calculate between %s and %s&lt;/string>"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="806"
            column="5"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`app_name`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;app_name&quot;>Flowzr&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/common.xml"
            line="13"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`app_description`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;app_description&quot;>Budget Expense Tracker&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/common.xml"
            line="14"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`about_copyright1`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;about_copyright1&quot;>Released under GNU GPL v2&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/common.xml"
            line="15"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`numbers`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string-array name=&quot;numbers&quot;>"
        errorLine2="               ~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/common.xml"
            line="26"
            column="16"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`decimal_separators`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string-array name=&quot;decimal_separators&quot;>"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/common.xml"
            line="40"
            column="16"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`group_separators`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string-array name=&quot;group_separators&quot;>"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/common.xml"
            line="45"
            column="16"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`field_separators`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string-array name=&quot;field_separators&quot;>"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/common.xml"
            line="51"
            column="16"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`sort_order_entities`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string-array name=&quot;sort_order_entities&quot;>"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/common.xml"
            line="56"
            column="16"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`ui_language_entities`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string-array name=&quot;ui_language_entities&quot;>"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/common.xml"
            line="63"
            column="16"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`ui_language_values`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string-array name=&quot;ui_language_values&quot;>"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/common.xml"
            line="84"
            column="16"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`sort_accounts_values`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string-array name=&quot;sort_accounts_values&quot;>"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/common.xml"
            line="105"
            column="16"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`sort_locations_values`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string-array name=&quot;sort_locations_values&quot;>"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/common.xml"
            line="112"
            column="16"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`sort_blotter_values`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string-array name=&quot;sort_blotter_values&quot;>"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/common.xml"
            line="116"
            column="16"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`report_reference_period_values`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string-array name=&quot;report_reference_period_values&quot;>"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/common.xml"
            line="120"
            column="16"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`report_reference_month_values`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string-array name=&quot;report_reference_month_values&quot;>"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/common.xml"
            line="126"
            column="16"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`currency_symbol_hint`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;currency_symbol_hint&quot;>$ £ ¥ π&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/common.xml"
            line="136"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`card_issuer_visa`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;card_issuer_visa&quot;>Visa&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/common.xml"
            line="137"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`card_issuer_electron`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;card_issuer_electron&quot;>Visa Electron&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/common.xml"
            line="138"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`card_issuer_mastercard`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;card_issuer_mastercard&quot;>Mastercard&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/common.xml"
            line="139"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`card_issuer_maestro`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;card_issuer_maestro&quot;>Maestro&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/common.xml"
            line="140"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`card_issuer_amex`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;card_issuer_amex&quot;>AMEX&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/common.xml"
            line="141"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`card_issuer_jcb`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;card_issuer_jcb&quot;>JCB&lt;/string> "
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/common.xml"
            line="142"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`card_issuer_diners`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;card_issuer_diners&quot;>Diners Club&lt;/string> "
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/common.xml"
            line="143"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`card_issuer_discover`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;card_issuer_discover&quot;>Discover&lt;/string> "
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/common.xml"
            line="144"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`card_issuer_nets`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;card_issuer_nets&quot;>NETS&lt;/string> "
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/common.xml"
            line="145"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`recur_rrule`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;recur_rrule&quot;>RFC-2445 RRULE&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/common.xml"
            line="146"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`lock_time_values`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string-array name=&quot;lock_time_values&quot;>"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/common.xml"
            line="150"
            column="19"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`date_format_values`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string-array name=&quot;date_format_values&quot;>"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/common.xml"
            line="159"
            column="19"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`qif_date_format_values`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string-array name=&quot;qif_date_format_values&quot;>"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/common.xml"
            line="166"
            column="19"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`symbol_formats`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string-array name=&quot;symbol_formats&quot;>"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/common.xml"
            line="179"
            column="19"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`startup_screen_values`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string-array name=&quot;startup_screen_values&quot;>"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/common.xml"
            line="186"
            column="19"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`exchange_rate_provider_entities`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string-array name=&quot;exchange_rate_provider_entities&quot;>"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/common.xml"
            line="193"
            column="19"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`exchange_rate_provider_values`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string-array name=&quot;exchange_rate_provider_values&quot;>"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/common.xml"
            line="199"
            column="19"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`widget_2x1`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;widget_2x1&quot;>Flowzr&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="31"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`widget_3x1`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;widget_3x1&quot;>Flowzr&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="32"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`widget_4x1`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;widget_4x1&quot;>Flowzr&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="33"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`backup`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;backup&quot;>Backup&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="34"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`reset`&quot; is not translated in &quot;da&quot; (Danish), &quot;fr&quot; (French), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;reset&quot;>Reset&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="42"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`pie_chart`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;pie_chart&quot;>Pie chart&lt;/string> "
        errorLine2="         ~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="162"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`zoom_in`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;zoom_in&quot;>Zoom In&lt;/string> "
        errorLine2="         ~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="163"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`zoom_out`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;zoom_out&quot;>Zoom Out&lt;/string> "
        errorLine2="         ~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="164"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`restore_database_inprogress_dropbox`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;restore_database_inprogress_dropbox&quot;>Restoring database...&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="289"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`downloading_rates`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;downloading_rates&quot;>Downloading conversion rates for %s...&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="664"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`flowzr_sync`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;flowzr_sync&quot;>Sync&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="695"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`flowzr_sync_error`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;flowzr_sync_error&quot;>Sync error&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="696"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`flowzr_sync_require_tap`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;flowzr_sync_require_tap&quot;>Sync needed, tap to activate&lt;/string>    "
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="697"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`flowzr_sync_error_no_network`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;flowzr_sync_error_no_network&quot;>Network is not available&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="698"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`flowzr_sync_auth_inprogress`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;flowzr_sync_auth_inprogress&quot;>Checking authentification ...&lt;/string>       "
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="699"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`flowzr_sync_inprogress`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;flowzr_sync_inprogress&quot;>In progress...&lt;/string>       "
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="700"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`flowzr_sync_was`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;flowzr_sync_was&quot;>Last sync was &lt;/string>       "
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="701"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`flowzr_sync_sending`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;flowzr_sync_sending&quot;>Sending &lt;/string>  "
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="702"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`flowzr_sync_receiving`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;flowzr_sync_receiving&quot;>Receiving &lt;/string>  "
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="703"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`buy_subscription`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;buy_subscription&quot;>Purchase a subscription&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="704"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`visit_flowzr`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;visit_flowzr&quot;>Visit Flowzr&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="705"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`account_required`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;account_required&quot;>An account is required.&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="706"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`flowzr_sync_success`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;flowzr_sync_success&quot;>Successfully synchronized&lt;/string>    "
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="707"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`flowzr_choose_account`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;flowzr_choose_account&quot;>Choose account to use on Flowzr.com&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="708"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`sync_from_zero`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;sync_from_zero&quot;>Force sync&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="709"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`flowzr_account_setup`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;flowzr_account_setup&quot;>Subscription ok, please restart sync.&lt;/string>            "
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="710"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`flowzr_subscription_required`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;flowzr_subscription_required&quot;>Subscription required.&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="711"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`flowzr_terms_of_use`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;flowzr_terms_of_use&quot;>A &amp;lt;b&amp;gt;paid subscription&amp;lt;/b&amp;gt; is required to use Flowzr sync service. The subscription can be cancelled free of charge during the trial period of &amp;lt;b&amp;gt;14 days&amp;lt;/b&amp;gt;. Flowzr is a third-party service, not affiliated with Financisto. By using the service you agree to Flowzr &amp;lt;a href=&quot;http://www.flowzr.com/static/en/mobile/privacypolicy.html&quot;&amp;gt;Privacy Policy&amp;lt;/a&amp;gt; and &amp;lt;a href=&quot;http://www.flowzr.com/static/en/mobile/tos.html&quot;&amp;gt;Terms Of Use Agreement&amp;lt;/a&amp;gt;.&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="712"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`auto_sync`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;auto_sync&quot;>Auto-sync&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="713"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`auto_sync_enabled`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;auto_sync_enabled&quot;>Enable auto-sync&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="714"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`auto_sync_enabled_summary`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;auto_sync_enabled_summary&quot;>Push changes every five minutes if any&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="715"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`hint_run_background`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;hint_run_background&quot;>...&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="716"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`flowzr_account`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;flowzr_account&quot;>Flowzr account&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="717"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`flowzr_account_summary`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;flowzr_account_summary&quot;>Choose your Flowzr account&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="718"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`sync_server`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;sync_server&quot;>Sync server&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="719"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`sync_server_url`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;sync_server_url&quot;>Sync server URL&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="720"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`googledrive`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;googledrive&quot;>Google Drive&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="722"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`googledrive_authorize`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;googledrive_authorize&quot;>Enable Sync to Google Drive&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="723"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`googledrive_authorize_summary`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;googledrive_authorize_summary&quot;>Sync your picture in Drive&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="724"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`googledrive_upload`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;googledrive_upload&quot;>Upload pictures&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="725"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`googledrive_upload_summary`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;googledrive_upload_summary&quot;>Upload attached pictures to Google Drive to share with Flowzr&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="726"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`googledrive_folder`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;googledrive_folder&quot;>Google Drive Folder&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="727"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`googledrive_folder_summary`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;googledrive_folder_summary&quot;>Select a Google Drive folder to store the uploaded pictures&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="728"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`unlink`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;unlink&quot;>Unlink&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="768"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`dropbox_error`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;dropbox_error&quot;>Error while working with Dropbox&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="775"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`dropbox_auth_error`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;dropbox_auth_error&quot;>Not authorized to upload to Dropbox. Please check your Preferences.&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="776"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`dropbox_loading_files`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;dropbox_loading_files&quot;>Loading files from Dropbox...&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="777"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`csv_import_inprogress_update`&quot; is not translated in &quot;da&quot; (Danish), &quot;fr&quot; (French), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;csv_import_inprogress_update&quot;>Importing data from CSV: %s%%...&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="819"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`delete_old_transactions`&quot; is not translated in &quot;da&quot; (Danish), &quot;fr&quot; (French), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;delete_old_transactions&quot;>Delete old transactions&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="821"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`purge_account_backup_database`&quot; is not translated in &quot;da&quot; (Danish), &quot;fr&quot; (French), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;purge_account_backup_database&quot;>Do database backup before deleting transactions&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="822"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`purge_account_date_summary`&quot; is not translated in &quot;da&quot; (Danish), &quot;fr&quot; (French), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;purge_account_date_summary&quot;>Delete transactions prior to AND including the specified date. Account balance will not be affected.&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="823"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`purge_account_confirm_title`&quot; is not translated in &quot;da&quot; (Danish), &quot;fr&quot; (French), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;purge_account_confirm_title&quot;>Confirm&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="824"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`purge_account_confirm_message`&quot; is not translated in &quot;da&quot; (Danish), &quot;fr&quot; (French), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;purge_account_confirm_message&quot; formatted=&quot;false&quot;>Delete transactions from account %s prior to AND including %s.&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="825"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`purge_account_payee`&quot; is not translated in &quot;da&quot; (Danish), &quot;fr&quot; (French), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;purge_account_payee&quot;>Previous period&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="826"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`purge_account_in_progress`&quot; is not translated in &quot;da&quot; (Danish), &quot;fr&quot; (French), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;purge_account_in_progress&quot;>Deleting old transactions...&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="827"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`purge_account_unable_to_do_backup`&quot; is not translated in &quot;da&quot; (Danish), &quot;fr&quot; (French), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;purge_account_unable_to_do_backup&quot;>Unable to do database backup, aborting...&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="828"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`show_account_last_transaction_date`&quot; is not translated in &quot;da&quot; (Danish), &quot;fr&quot; (French), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;show_account_last_transaction_date&quot;>Last transaction date&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="830"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`show_account_last_transaction_date_summary`&quot; is not translated in &quot;da&quot; (Danish), &quot;fr&quot; (French), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;show_account_last_transaction_date_summary&quot;>Show last transaction date for on accounts list screen (requires restart)&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="831"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`accounts_list_screen`&quot; is not translated in &quot;da&quot; (Danish), &quot;fr&quot; (French), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;accounts_list_screen&quot;>Accounts List&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="832"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`accounts_list_screen_summary`&quot; is not translated in &quot;da&quot; (Danish), &quot;fr&quot; (French), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;accounts_list_screen_summary&quot;>Preferences for accounts list screen&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="833"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`blotter_screen`&quot; is not translated in &quot;da&quot; (Danish), &quot;fr&quot; (French), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;blotter_screen&quot;>Blotter&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="834"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`blotter_screen_summary`&quot; is not translated in &quot;da&quot; (Danish), &quot;fr&quot; (French), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;blotter_screen_summary&quot;>Preferences for blotter screen&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="835"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`hide_closed_accounts`&quot; is not translated in &quot;da&quot; (Danish), &quot;fr&quot; (French), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;hide_closed_accounts&quot;>Hide closed accounts&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="836"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`hide_closed_accounts_summary`&quot; is not translated in &quot;da&quot; (Danish), &quot;fr&quot; (French), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;hide_closed_accounts_summary&quot;>Hide or show closed accounts in the accounts list (requires restart)&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="837"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`re_index_categories`&quot; is not translated in &quot;da&quot; (Danish), &quot;fr&quot; (French), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;re_index_categories&quot;>Re-index&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="838"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`startup_screen`&quot; is not translated in &quot;da&quot; (Danish), &quot;fr&quot; (French), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;startup_screen&quot;>Startup screen&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="839"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`startup_screen_summary`&quot; is not translated in &quot;da&quot; (Danish), &quot;fr&quot; (French), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;startup_screen_summary&quot;>Select tab which will be selected on startup&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="840"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`startup_screen_entities`&quot; is not translated in &quot;da&quot; (Danish), &quot;fr&quot; (French), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string-array name=&quot;startup_screen_entities&quot;>"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="841"
            column="19"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`integrity_error`&quot; is not translated in &quot;da&quot; (Danish), &quot;fr&quot; (French), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;integrity_error&quot;>Running balances look out of sync, please do Menu -> More -> Integrity Fix&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="848"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`integrity_fix`&quot; is not translated in &quot;da&quot; (Danish), &quot;fr&quot; (French), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;integrity_fix&quot;>Integrity Fix&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="849"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`integrity_fix_in_progress`&quot; is not translated in &quot;da&quot; (Danish), &quot;fr&quot; (French), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;integrity_fix_in_progress&quot;>Checking and fixing if necessary...&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="850"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`select_to_account_differ_from_to_account`&quot; is not translated in &quot;da&quot; (Danish), &quot;fr&quot; (French), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;select_to_account_differ_from_to_account&quot;>Cannot transfer to the same account...&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="852"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`period_this_and_last_week`&quot; is not translated in &quot;da&quot; (Danish), &quot;fr&quot; (French), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;period_this_and_last_week&quot;>This and last week&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="854"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`period_this_and_last_month`&quot; is not translated in &quot;da&quot; (Danish), &quot;fr&quot; (French), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;period_this_and_last_month&quot;>This and last month&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="855"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`period_custom`&quot; is not translated in &quot;da&quot; (Danish), &quot;fr&quot; (French), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;period_custom&quot;>Custom&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="856"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`original_amount`&quot; is not translated in &quot;da&quot; (Danish), &quot;fr&quot; (French), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;original_amount&quot;>Original Amount&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="858"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`original_currency_as_account`&quot; is not translated in &quot;da&quot; (Danish), &quot;fr&quot; (French), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;original_currency_as_account&quot;>Same as account&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="859"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`split_transfer_not_supported_yet`&quot; is not translated in &quot;da&quot; (Danish), &quot;fr&quot; (French), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;split_transfer_not_supported_yet&quot;>Split-transfers with a currency differ from account\&apos;s currency are not yet supported&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="860"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`show_currency`&quot; is not translated in &quot;da&quot; (Danish), &quot;fr&quot; (French), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;show_currency&quot;>Show currency&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="861"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`show_currency_summary`&quot; is not translated in &quot;da&quot; (Danish), &quot;fr&quot; (French), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;show_currency_summary&quot;>Show currency selector in new transaction screen&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="862"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`reconcile`&quot; is not translated in &quot;da&quot; (Danish), &quot;fr&quot; (French), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;reconcile&quot;>Reconcile&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="863"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`file_import_utf8_warning`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;file_import_utf8_warning&quot;>Please make sure that the file is in UTF-8&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="865"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`show_is_ccard_payment`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;show_is_ccard_payment&quot;>Show \&apos;Credit Card Payment\&apos;&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="867"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`show_is_ccard_payment_summary`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;show_is_ccard_payment_summary&quot;>Show checkbox to mark credit card payments&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="868"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`open_calculator_for_template_transactions`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;open_calculator_for_template_transactions&quot;>Open Calculator&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="869"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`open_calculator_for_template_transactions_summary`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;open_calculator_for_template_transactions_summary&quot;>Open Calculator for transactions created from template&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="870"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`installed_on_sd_card_warning`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;installed_on_sd_card_warning&quot;>Scheduled transactions might NOT work as expected when Financisto installed on SD card. Please move it to phone memory.&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="872"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`planner`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;planner&quot;>Planner&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="874"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`period_tomorrow`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;period_tomorrow&quot;>Tomorrow&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="876"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`period_next_week`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;period_next_week&quot;>Next week&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="877"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`period_this_and_next_week`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;period_this_and_next_week&quot;>This and next week&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="878"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`period_next_month`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;period_next_month&quot;>Next month&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="879"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`period_this_and_next_month`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;period_this_and_next_month&quot;>This and next month&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="880"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`period_next_3_months`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;period_next_3_months&quot;>Next 3 months&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="881"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`exchange_rate_provider_error`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;exchange_rate_provider_error&quot;>Something wrong with the exchange rates provider. Response from the service - %s&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="883"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`exchange_rate_provider`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;exchange_rate_provider&quot;>Exchange Rate Provider&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="884"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`exchange_rate_provider_summary`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;exchange_rate_provider_summary&quot;>Select provider to download exchange rates&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="885"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`openexchangerates_app_id`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;openexchangerates_app_id&quot;>OpenExchangeRates App ID&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="886"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`openexchangerates_app_id_summary`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;openexchangerates_app_id_summary&quot;>Please register a free account on OpenExchangeRates and provide your App ID&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="887"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`download_all_rates`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;download_all_rates&quot;>Download all current rates&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="888"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`downloading_rates_result`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;downloading_rates_result&quot;>Downloaded exchange rates&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="889"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`export_splits`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;export_splits&quot;>Export splits&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="891"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`account_by_currency`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;account_by_currency&quot;>All %s Accounts&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="893"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`budget_type_saving`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;budget_type_saving&quot;>Saving&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="894"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`budget_type_saving_summary`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;budget_type_saving_summary&quot;>Budget with a goal to save money&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="895"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`pin_protection_haptic_feedback`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;pin_protection_haptic_feedback&quot;>Haptic feedback&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="896"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`pin_protection_haptic_feedback_summary`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;pin_protection_haptic_feedback_summary&quot;>Enable vibration when tapping pin buttons&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="897"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`offline_rate`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;offline_rate&quot;>No network connection, the latest offline rate applied...&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="898"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`show_payee_in_transfer`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;show_payee_in_transfer&quot;>Transfer Payee&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="900"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`show_payee_in_transfer_summary`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;show_payee_in_transfer_summary&quot;>Show payee field in New Transfer screen&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="901"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`google_drive_backup_account`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;google_drive_backup_account&quot;>Backup account&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="902"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`google_drive_backup_account_summary`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;google_drive_backup_account_summary&quot;>Choose your Google Drive account&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="903"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`google_drive_unlink_summary`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;google_drive_unlink_summary&quot;>Prevent from uploading files to Google Drive&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="904"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`google_drive_upload_backup`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;google_drive_upload_backup&quot;>Upload Backups&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="905"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`google_drive_upload_backup_summary`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;google_drive_upload_backup_summary&quot;>Upload database backups to Google Drive&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="906"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`google_drive_upload_autobackup`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;google_drive_upload_autobackup&quot;>Upload Auto-backups&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="907"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`google_drive_upload_autobackup_summary`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;google_drive_upload_autobackup_summary&quot;>Upload database auto-backups to Google Drive&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="908"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`google_drive_permission_requested`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;google_drive_permission_requested&quot;>Permission requested&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="912"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`google_drive_permission_requested_for_account`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;google_drive_permission_requested_for_account&quot;>for account %s&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="913"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`google_drive_permission_required`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;google_drive_permission_required&quot;>Please authorize access to your Google Drive then try again...&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="914"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`google_drive_loading_files`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;google_drive_loading_files&quot;>Loading files from Google Drive...&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="915"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`google_drive_account_required`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;google_drive_account_required&quot;>Please specify your Google Drive account in the Preferences then try again...&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="916"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`google_drive_account_select_error`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;google_drive_account_select_error&quot;>Unable to select a Google account to use. Looks like your device does not support Google Play Services.&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="917"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`google_drive_backup_full_readonly`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;google_drive_backup_full_readonly&quot;>Full read-only access&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="918"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`google_drive_backup_full_readonly_summary`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;google_drive_backup_full_readonly_summary&quot;>Allows read-only access to all files on your Google Drive.&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="919"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`backup_restore_database_online`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;backup_restore_database_online&quot;>Backup/Restore Online&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="921"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`backup_database_online_google_drive`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;backup_database_online_google_drive&quot;>Google Drive Backup&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="922"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`restore_database_online_google_drive`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;restore_database_online_google_drive&quot;>Google Drive Restore&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="923"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`backup_database_online_dropbox`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;backup_database_online_dropbox&quot;>Dropbox Backup&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="924"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`restore_database_online_dropbox`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;restore_database_online_dropbox&quot;>Dropbox Restore&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="925"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`backup_database_dropbox_inprogress`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;backup_database_dropbox_inprogress&quot;>Backing up database...&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="926"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`use_today_for_total`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;use_today_for_total&quot;>Today\&apos;s totals&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="928"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`use_today_for_total_sumary`&quot; is not translated in &quot;ca&quot; (Catalan), &quot;cs-CZ&quot; (Czech: Czech Republic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hu&quot; (Hungarian), &quot;it&quot; (Italian), &quot;ko&quot; (Korean), &quot;no-NB&quot; (Norwegian), &quot;pl&quot; (Polish), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;sk&quot; (Slovak), &quot;uk-UA&quot; (Ukrainian: Ukraine), &quot;zh-CN&quot; (Chinese: China), &quot;zh-TW&quot; (Chinese: Taiwan)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.

If the string should *not* be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.

By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.

You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;use_today_for_total_sumary&quot;>Show total in date of today&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values/strings.xml"
            line="929"
            column="10"/>
    </issue>

    <issue
        id="ExtraTranslation"
        severity="Fatal"
        message="&quot;`gdocs_login_failed`&quot; is translated here but not found in default locale"
        category="Correctness:Messages"
        priority="6"
        summary="Extra translation"
        explanation="If a string appears in a specific language translation file, but there is no corresponding string in the default locale, then this string is probably unused. (It&apos;s technically possible that your application is only intended to run in a specific locale, but it&apos;s still a good idea to provide a fallback.).

Note that these strings can lead to crashes if the string is looked up on any locale not providing a translation, so it&apos;s important to clean them up."
        errorLine1="  &lt;string name=&quot;gdocs_login_failed&quot;>Les credencials d\&apos;inici de sessió a Google Docs no són vàlides.&lt;/string>"
        errorLine2="          ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-ca/strings.xml"
            line="232"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-cs-rCZ/strings.xml"
            line="232"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-da/strings.xml"
            line="231"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-de/strings.xml"
            line="232"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-es/strings.xml"
            line="232"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-fr/strings.xml"
            line="231"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-hu/strings.xml"
            line="232"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-it/strings.xml"
            line="232"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-ko/strings.xml"
            line="231"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-no-rNB/strings.xml"
            line="231"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-pl/strings.xml"
            line="231"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-pt-rBR/strings.xml"
            line="232"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-pt-rPT/strings.xml"
            line="232"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-ro/strings.xml"
            line="232"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-ru/strings.xml"
            line="232"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-sk/strings.xml"
            line="232"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-uk-rUA/strings.xml"
            line="232"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-zh-rCN/strings.xml"
            line="232"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-zh-rTW/strings.xml"
            line="232"
            column="11"/>
    </issue>

    <issue
        id="ExtraTranslation"
        severity="Fatal"
        message="&quot;`package_info_error`&quot; is translated here but not found in default locale"
        category="Correctness:Messages"
        priority="6"
        summary="Extra translation"
        explanation="If a string appears in a specific language translation file, but there is no corresponding string in the default locale, then this string is probably unused. (It&apos;s technically possible that your application is only intended to run in a specific locale, but it&apos;s still a good idea to provide a fallback.).

Note that these strings can lead to crashes if the string is looked up on any locale not providing a translation, so it&apos;s important to clean them up."
        errorLine1="  &lt;string name=&quot;package_info_error&quot;>No fou possible accedir a la informació del paquet Financisto.&lt;/string>"
        errorLine2="          ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-ca/strings.xml"
            line="238"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-cs-rCZ/strings.xml"
            line="238"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-da/strings.xml"
            line="237"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-de/strings.xml"
            line="238"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-es/strings.xml"
            line="238"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-fr/strings.xml"
            line="237"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-hu/strings.xml"
            line="238"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-it/strings.xml"
            line="238"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-ko/strings.xml"
            line="237"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-no-rNB/strings.xml"
            line="237"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-pl/strings.xml"
            line="237"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-pt-rBR/strings.xml"
            line="238"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-pt-rPT/strings.xml"
            line="238"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-ro/strings.xml"
            line="238"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-ru/strings.xml"
            line="238"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-sk/strings.xml"
            line="238"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-uk-rUA/strings.xml"
            line="238"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-zh-rCN/strings.xml"
            line="238"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-zh-rTW/strings.xml"
            line="238"
            column="11"/>
    </issue>

    <issue
        id="ExtraTranslation"
        severity="Fatal"
        message="&quot;`dropbox_unlink`&quot; is translated here but not found in default locale"
        category="Correctness:Messages"
        priority="6"
        summary="Extra translation"
        explanation="If a string appears in a specific language translation file, but there is no corresponding string in the default locale, then this string is probably unused. (It&apos;s technically possible that your application is only intended to run in a specific locale, but it&apos;s still a good idea to provide a fallback.).

Note that these strings can lead to crashes if the string is looked up on any locale not providing a translation, so it&apos;s important to clean them up."
        errorLine1="  &lt;string name=&quot;dropbox_unlink&quot;>Desenllaça&lt;/string>"
        errorLine2="          ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-ca/strings.xml"
            line="624"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-cs-rCZ/strings.xml"
            line="624"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-da/strings.xml"
            line="623"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-de/strings.xml"
            line="624"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-es/strings.xml"
            line="624"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-fr/strings.xml"
            line="623"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-hu/strings.xml"
            line="624"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-it/strings.xml"
            line="624"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-ko/strings.xml"
            line="623"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-no-rNB/strings.xml"
            line="623"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-pl/strings.xml"
            line="623"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-pt-rBR/strings.xml"
            line="624"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-pt-rPT/strings.xml"
            line="624"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-ro/strings.xml"
            line="624"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-ru/strings.xml"
            line="624"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-sk/strings.xml"
            line="624"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-uk-rUA/strings.xml"
            line="624"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-zh-rCN/strings.xml"
            line="624"
            column="11"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-zh-rTW/strings.xml"
            line="624"
            column="11"/>
    </issue>

    <issue
        id="ExtraTranslation"
        severity="Fatal"
        message="&quot;`datetime_filter_items`&quot; is translated here but not found in default locale"
        category="Correctness:Messages"
        priority="6"
        summary="Extra translation"
        explanation="If a string appears in a specific language translation file, but there is no corresponding string in the default locale, then this string is probably unused. (It&apos;s technically possible that your application is only intended to run in a specific locale, but it&apos;s still a good idea to provide a fallback.).

Note that these strings can lead to crashes if the string is looked up on any locale not providing a translation, so it&apos;s important to clean them up."
        errorLine1="  &lt;string-array name=&quot;datetime_filter_items&quot;>"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-da/strings.xml"
            line="670"
            column="17"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-fr/strings.xml"
            line="670"
            column="17"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-ko/strings.xml"
            line="670"
            column="17"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-no-rNB/strings.xml"
            line="670"
            column="17"/>
        <location
            file="/home/eflorent/project/flowzr-android-black/res/values-pl/strings.xml"
            line="670"
            column="17"/>
    </issue>

    <issue
        id="AppIndexingError"
        severity="Error"
        message="android:host missing"
        category="Usability"
        priority="5"
        summary="Wrong Usage of App Indexing"
        explanation="Ensures the app can correctly handle deep links and integrate with App Indexing for Google search."
        url="https://g.co/AppIndexing"
        urls="https://g.co/AppIndexing"
        errorLine1="       &lt;data android:scheme=&quot;package&quot; android:path=&quot;com.flowzr&quot; />"
        errorLine2="       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/eflorent/project/flowzr-android-black/AndroidManifest.xml"
            line="127"
            column="8"/>
    </issue>

    <issue
        id="AppIndexingError"
        severity="Error"
        message="android:path attribute should start with &apos;/&apos;, but it is : com.flowzr"
        category="Usability"
        priority="5"
        summary="Wrong Usage of App Indexing"
        explanation="Ensures the app can correctly handle deep links and integrate with App Indexing for Google search."
        url="https://g.co/AppIndexing"
        urls="https://g.co/AppIndexing"
        errorLine1="       &lt;data android:scheme=&quot;package&quot; android:path=&quot;com.flowzr&quot; />"
        errorLine2="                                      ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/eflorent/project/flowzr-android-black/AndroidManifest.xml"
            line="127"
            column="39"/>
    </issue>

    <issue
        id="MenuTitle"
        severity="Error"
        message="Menu items should specify a `title`"
        category="Usability"
        priority="5"
        summary="Missing menu title"
        explanation="From the action bar documentation:
&quot;It&apos;s important that you always define android:title for each menu item — even if you don&apos;t declare that the title appear with the action item — for three reasons:

* If there&apos;s not enough room in the action bar for the action item, the menu item appears in the overflow menu and only the title appears.
* Screen readers for sight-impaired users read the menu item&apos;s title.
* If the action item appears with only the icon, a user can long-press the item to reveal a tool-tip that displays the action item&apos;s title.
The android:icon is always optional, but recommended."
        url="http://developer.android.com/guide/topics/ui/actionbar.html"
        urls="http://developer.android.com/guide/topics/ui/actionbar.html"
        errorLine1="    &lt;item android:id=&quot;@+id/action_add&quot;"
        errorLine2="    ^"
        quickfix="studio">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/menu/add.xml"
            line="5"
            column="5"/>
    </issue>

    <issue
        id="MenuTitle"
        severity="Error"
        message="Menu items should specify a `title`"
        category="Usability"
        priority="5"
        summary="Missing menu title"
        explanation="From the action bar documentation:
&quot;It&apos;s important that you always define android:title for each menu item — even if you don&apos;t declare that the title appear with the action item — for three reasons:

* If there&apos;s not enough room in the action bar for the action item, the menu item appears in the overflow menu and only the title appears.
* Screen readers for sight-impaired users read the menu item&apos;s title.
* If the action item appears with only the icon, a user can long-press the item to reveal a tool-tip that displays the action item&apos;s title.
The android:icon is always optional, but recommended."
        url="http://developer.android.com/guide/topics/ui/actionbar.html"
        urls="http://developer.android.com/guide/topics/ui/actionbar.html"
        errorLine1="    &lt;item android:id=&quot;@+id/bUnCheckAll&quot;"
        errorLine2="    ^"
        quickfix="studio">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/menu/blotter_massop_actions.xml"
            line="17"
            column="5"/>
    </issue>

    <issue
        id="MenuTitle"
        severity="Error"
        message="Menu items should specify a `title`"
        category="Usability"
        priority="5"
        summary="Missing menu title"
        explanation="From the action bar documentation:
&quot;It&apos;s important that you always define android:title for each menu item — even if you don&apos;t declare that the title appear with the action item — for three reasons:

* If there&apos;s not enough room in the action bar for the action item, the menu item appears in the overflow menu and only the title appears.
* Screen readers for sight-impaired users read the menu item&apos;s title.
* If the action item appears with only the icon, a user can long-press the item to reveal a tool-tip that displays the action item&apos;s title.
The android:icon is always optional, but recommended."
        url="http://developer.android.com/guide/topics/ui/actionbar.html"
        urls="http://developer.android.com/guide/topics/ui/actionbar.html"
        errorLine1="    &lt;item android:id=&quot;@+id/action_filter_budget&quot;"
        errorLine2="    ^"
        quickfix="studio">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/menu/budgets_actions.xml"
            line="4"
            column="5"/>
    </issue>

    <issue
        id="MenuTitle"
        severity="Error"
        message="Menu items should specify a `title`"
        category="Usability"
        priority="5"
        summary="Missing menu title"
        explanation="From the action bar documentation:
&quot;It&apos;s important that you always define android:title for each menu item — even if you don&apos;t declare that the title appear with the action item — for three reasons:

* If there&apos;s not enough room in the action bar for the action item, the menu item appears in the overflow menu and only the title appears.
* Screen readers for sight-impaired users read the menu item&apos;s title.
* If the action item appears with only the icon, a user can long-press the item to reveal a tool-tip that displays the action item&apos;s title.
The android:icon is always optional, but recommended."
        url="http://developer.android.com/guide/topics/ui/actionbar.html"
        urls="http://developer.android.com/guide/topics/ui/actionbar.html"
        errorLine1="    &lt;item android:id=&quot;@+id/action_add&quot;"
        errorLine2="    ^"
        quickfix="studio">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/menu/budgets_actions.xml"
            line="7"
            column="5"/>
    </issue>

    <issue
        id="MenuTitle"
        severity="Error"
        message="Menu items should specify a `title`"
        category="Usability"
        priority="5"
        summary="Missing menu title"
        explanation="From the action bar documentation:
&quot;It&apos;s important that you always define android:title for each menu item — even if you don&apos;t declare that the title appear with the action item — for three reasons:

* If there&apos;s not enough room in the action bar for the action item, the menu item appears in the overflow menu and only the title appears.
* Screen readers for sight-impaired users read the menu item&apos;s title.
* If the action item appears with only the icon, a user can long-press the item to reveal a tool-tip that displays the action item&apos;s title.
The android:icon is always optional, but recommended."
        url="http://developer.android.com/guide/topics/ui/actionbar.html"
        urls="http://developer.android.com/guide/topics/ui/actionbar.html"
        errorLine1="    &lt;item android:id=&quot;@+id/action_add&quot;"
        errorLine2="    ^"
        quickfix="studio">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/menu/categories_actions.xml"
            line="5"
            column="5"/>
    </issue>

    <issue
        id="MenuTitle"
        severity="Error"
        message="Menu items should specify a `title`"
        category="Usability"
        priority="5"
        summary="Missing menu title"
        explanation="From the action bar documentation:
&quot;It&apos;s important that you always define android:title for each menu item — even if you don&apos;t declare that the title appear with the action item — for three reasons:

* If there&apos;s not enough room in the action bar for the action item, the menu item appears in the overflow menu and only the title appears.
* Screen readers for sight-impaired users read the menu item&apos;s title.
* If the action item appears with only the icon, a user can long-press the item to reveal a tool-tip that displays the action item&apos;s title.
The android:icon is always optional, but recommended."
        url="http://developer.android.com/guide/topics/ui/actionbar.html"
        urls="http://developer.android.com/guide/topics/ui/actionbar.html"
        errorLine1="    &lt;item android:id=&quot;@+id/action_attributes&quot;"
        errorLine2="    ^"
        quickfix="studio">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/menu/categories_actions.xml"
            line="9"
            column="5"/>
    </issue>

    <issue
        id="MenuTitle"
        severity="Error"
        message="Menu items should specify a `title`"
        category="Usability"
        priority="5"
        summary="Missing menu title"
        explanation="From the action bar documentation:
&quot;It&apos;s important that you always define android:title for each menu item — even if you don&apos;t declare that the title appear with the action item — for three reasons:

* If there&apos;s not enough room in the action bar for the action item, the menu item appears in the overflow menu and only the title appears.
* Screen readers for sight-impaired users read the menu item&apos;s title.
* If the action item appears with only the icon, a user can long-press the item to reveal a tool-tip that displays the action item&apos;s title.
The android:icon is always optional, but recommended."
        url="http://developer.android.com/guide/topics/ui/actionbar.html"
        urls="http://developer.android.com/guide/topics/ui/actionbar.html"
        errorLine1="    &lt;item android:id=&quot;@+id/action_expand&quot;"
        errorLine2="    ^"
        quickfix="studio">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/menu/categories_actions.xml"
            line="13"
            column="5"/>
    </issue>

    <issue
        id="MenuTitle"
        severity="Error"
        message="Menu items should specify a `title`"
        category="Usability"
        priority="5"
        summary="Missing menu title"
        explanation="From the action bar documentation:
&quot;It&apos;s important that you always define android:title for each menu item — even if you don&apos;t declare that the title appear with the action item — for three reasons:

* If there&apos;s not enough room in the action bar for the action item, the menu item appears in the overflow menu and only the title appears.
* Screen readers for sight-impaired users read the menu item&apos;s title.
* If the action item appears with only the icon, a user can long-press the item to reveal a tool-tip that displays the action item&apos;s title.
The android:icon is always optional, but recommended."
        url="http://developer.android.com/guide/topics/ui/actionbar.html"
        urls="http://developer.android.com/guide/topics/ui/actionbar.html"
        errorLine1="    &lt;item android:id=&quot;@+id/bBack&quot;"
        errorLine2="    ^"
        quickfix="studio">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/menu/category_selector_actions.xml"
            line="5"
            column="5"/>
    </issue>

    <issue
        id="MenuTitle"
        severity="Error"
        message="Menu items should specify a `title`"
        category="Usability"
        priority="5"
        summary="Missing menu title"
        explanation="From the action bar documentation:
&quot;It&apos;s important that you always define android:title for each menu item — even if you don&apos;t declare that the title appear with the action item — for three reasons:

* If there&apos;s not enough room in the action bar for the action item, the menu item appears in the overflow menu and only the title appears.
* Screen readers for sight-impaired users read the menu item&apos;s title.
* If the action item appears with only the icon, a user can long-press the item to reveal a tool-tip that displays the action item&apos;s title.
The android:icon is always optional, but recommended."
        url="http://developer.android.com/guide/topics/ui/actionbar.html"
        urls="http://developer.android.com/guide/topics/ui/actionbar.html"
        errorLine1="    &lt;item android:id=&quot;@+id/bAdd&quot;"
        errorLine2="    ^"
        quickfix="studio">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/menu/category_selector_actions.xml"
            line="9"
            column="5"/>
    </issue>

    <issue
        id="MenuTitle"
        severity="Error"
        message="Menu items should specify a `title`"
        category="Usability"
        priority="5"
        summary="Missing menu title"
        explanation="From the action bar documentation:
&quot;It&apos;s important that you always define android:title for each menu item — even if you don&apos;t declare that the title appear with the action item — for three reasons:

* If there&apos;s not enough room in the action bar for the action item, the menu item appears in the overflow menu and only the title appears.
* Screen readers for sight-impaired users read the menu item&apos;s title.
* If the action item appears with only the icon, a user can long-press the item to reveal a tool-tip that displays the action item&apos;s title.
The android:icon is always optional, but recommended."
        url="http://developer.android.com/guide/topics/ui/actionbar.html"
        urls="http://developer.android.com/guide/topics/ui/actionbar.html"
        errorLine1="    &lt;item android:id=&quot;@+id/settings&quot;"
        errorLine2="    ^"
        quickfix="studio">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/menu/report2d_actions.xml"
            line="5"
            column="5"/>
    </issue>

    <issue
        id="MenuTitle"
        severity="Error"
        message="Menu items should specify a `title`"
        category="Usability"
        priority="5"
        summary="Missing menu title"
        explanation="From the action bar documentation:
&quot;It&apos;s important that you always define android:title for each menu item — even if you don&apos;t declare that the title appear with the action item — for three reasons:

* If there&apos;s not enough room in the action bar for the action item, the menu item appears in the overflow menu and only the title appears.
* Screen readers for sight-impaired users read the menu item&apos;s title.
* If the action item appears with only the icon, a user can long-press the item to reveal a tool-tip that displays the action item&apos;s title.
The android:icon is always optional, but recommended."
        url="http://developer.android.com/guide/topics/ui/actionbar.html"
        urls="http://developer.android.com/guide/topics/ui/actionbar.html"
        errorLine1="    &lt;item android:id=&quot;@+id/bt_filter_previous&quot;"
        errorLine2="    ^"
        quickfix="studio">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/menu/report2d_actions.xml"
            line="10"
            column="5"/>
    </issue>

    <issue
        id="MenuTitle"
        severity="Error"
        message="Menu items should specify a `title`"
        category="Usability"
        priority="5"
        summary="Missing menu title"
        explanation="From the action bar documentation:
&quot;It&apos;s important that you always define android:title for each menu item — even if you don&apos;t declare that the title appear with the action item — for three reasons:

* If there&apos;s not enough room in the action bar for the action item, the menu item appears in the overflow menu and only the title appears.
* Screen readers for sight-impaired users read the menu item&apos;s title.
* If the action item appears with only the icon, a user can long-press the item to reveal a tool-tip that displays the action item&apos;s title.
The android:icon is always optional, but recommended."
        url="http://developer.android.com/guide/topics/ui/actionbar.html"
        urls="http://developer.android.com/guide/topics/ui/actionbar.html"
        errorLine1="    &lt;item android:id=&quot;@+id/bt_filter_next&quot;"
        errorLine2="    ^"
        quickfix="studio">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/menu/report2d_actions.xml"
            line="15"
            column="5"/>
    </issue>

    <issue
        id="MenuTitle"
        severity="Error"
        message="Menu items should specify a `title`"
        category="Usability"
        priority="5"
        summary="Missing menu title"
        explanation="From the action bar documentation:
&quot;It&apos;s important that you always define android:title for each menu item — even if you don&apos;t declare that the title appear with the action item — for three reasons:

* If there&apos;s not enough room in the action bar for the action item, the menu item appears in the overflow menu and only the title appears.
* Screen readers for sight-impaired users read the menu item&apos;s title.
* If the action item appears with only the icon, a user can long-press the item to reveal a tool-tip that displays the action item&apos;s title.
The android:icon is always optional, but recommended."
        url="http://developer.android.com/guide/topics/ui/actionbar.html"
        urls="http://developer.android.com/guide/topics/ui/actionbar.html"
        errorLine1="    &lt;item android:id=&quot;@+id/bPieChart&quot;"
        errorLine2="    ^"
        quickfix="studio">
        <location
            file="/home/eflorent/project/flowzr-android-black/res/menu/reports_actions.xml"
            line="14"
            column="5"/>
    </issue>

</issues>
